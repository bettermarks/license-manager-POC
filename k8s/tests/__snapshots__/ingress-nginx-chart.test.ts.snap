// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ingress-nginx-chart Without tls 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "automountServiceAccountToken": true,
    "kind": "ServiceAccount",
    "metadata": Object {
      "labels": Object {
        "app": "nginx-controller",
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx",
      "namespace": "default",
    },
  },
  Object {
    "apiVersion": "v1",
    "data": Object {
      "allow-snippet-annotations": "true",
      "log-format-escape-json": "true",
      "log-format-upstream": "{ \\"timestamp\\": \\"$time_iso8601\\", \\"nginx\\": {\\"x_forwarded_proto\\": \\"$http_x_forwarded_proto\\", \\"x_forwarded_for\\": \\"$proxy_add_x_forwarded_for\\", \\"remote_addr\\": \\"$remote_addr\\", \\"remote_user\\": \\"$remote_user\\", \\"status\\": \\"$status\\", \\"body_bytes_sent\\": $body_bytes_sent, \\"request\\": \\"$request\\", \\"request_length\\": $request_length, \\"request_method\\": \\"$request_method\\", \\"request_time\\": $request_time, \\"http_referrer\\": \\"$http_referer\\", \\"http_user_agent\\": \\"$http_user_agent\\", \\"upstream_connect_time\\": $upstream_connect_time, \\"upstream_response_time\\": $upstream_response_time, \\"upstream_bytes_sent\\": $upstream_bytes_sent, \\"upstream_bytes_received\\": $upstream_bytes_received, \\"upstream_status\\": \\"$upstream_status\\", \\"upstream_server\\": \\"$upstream_addr\\", \\"host\\": \\"$host\\", \\"cf_ray\\": \\"$http_cf_ray\\", \\"request_id\\": \\"$request_id\\" } }",
      "use-forwarded-headers": "true",
    },
    "kind": "ConfigMap",
    "metadata": Object {
      "labels": Object {
        "app": "nginx-controller",
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-controller",
      "namespace": "default",
    },
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app": "nginx-controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "configmaps",
          "endpoints",
          "nodes",
          "pods",
          "secrets",
          "namespaces",
        ],
        "verbs": Array [
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "coordination.k8s.io",
        ],
        "resources": Array [
          "leases",
        ],
        "verbs": Array [
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "nodes",
        ],
        "verbs": Array [
          "get",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "services",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingresses",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "events",
        ],
        "verbs": Array [
          "create",
          "patch",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingresses/status",
        ],
        "verbs": Array [
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingressclasses",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "discovery.k8s.io",
        ],
        "resources": Array [
          "endpointslices",
        ],
        "verbs": Array [
          "list",
          "watch",
          "get",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app": "nginx-controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "ingress-nginx",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "ingress-nginx",
        "namespace": "default",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": Object {
      "labels": Object {
        "app": "nginx-controller",
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx",
      "namespace": "default",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "namespaces",
        ],
        "verbs": Array [
          "get",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "configmaps",
          "pods",
          "secrets",
          "endpoints",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "services",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingresses",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingresses/status",
        ],
        "verbs": Array [
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingressclasses",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "coordination.k8s.io",
        ],
        "resourceNames": Array [
          "ingress-nginx-leader",
        ],
        "resources": Array [
          "leases",
        ],
        "verbs": Array [
          "get",
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "coordination.k8s.io",
        ],
        "resources": Array [
          "leases",
        ],
        "verbs": Array [
          "create",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "events",
        ],
        "verbs": Array [
          "create",
          "patch",
        ],
      },
      Object {
        "apiGroups": Array [
          "discovery.k8s.io",
        ],
        "resources": Array [
          "endpointslices",
        ],
        "verbs": Array [
          "list",
          "watch",
          "get",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": Object {
      "labels": Object {
        "app": "nginx-controller",
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx",
      "namespace": "default",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "ingress-nginx",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "ingress-nginx",
        "namespace": "default",
      },
    ],
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "labels": Object {
        "app": "nginx-controller",
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-controller-admission",
      "namespace": "default",
    },
    "spec": Object {
      "ports": Array [
        Object {
          "appProtocol": "https",
          "name": "https-webhook",
          "port": 443,
          "targetPort": "webhook",
        },
      ],
      "selector": Object {
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "type": "ClusterIP",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-controller",
      "namespace": "default",
    },
    "spec": Object {
      "ports": Array [
        Object {
          "appProtocol": "http",
          "name": "http",
          "port": 80,
          "protocol": "TCP",
          "targetPort": "http",
        },
        Object {
          "appProtocol": "https",
          "name": "https",
          "port": 443,
          "protocol": "TCP",
          "targetPort": "https",
        },
      ],
      "selector": Object {
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "type": "ClusterIP",
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "labels": Object {
        "app": "nginx-controller",
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-controller",
      "namespace": "default",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "replicas": 1,
      "revisionHistoryLimit": 10,
      "selector": Object {
        "matchLabels": Object {
          "app.kubernetes.io/component": "controller",
          "app.kubernetes.io/instance": "ingress-nginx",
          "app.kubernetes.io/name": "ingress-nginx",
        },
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app": "nginx-controller",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "ingress-nginx",
            "app.kubernetes.io/name": "ingress-nginx",
          },
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "/nginx-ingress-controller",
                "--publish-service=$(POD_NAMESPACE)/ingress-nginx-controller",
                "--election-id=ingress-nginx-leader",
                "--controller-class=k8s.io/ingress-nginx",
                "--ingress-class=nginx",
                "--configmap=$(POD_NAMESPACE)/ingress-nginx-controller",
                "--validating-webhook=:8443",
                "--validating-webhook-certificate=/usr/local/certificates/cert",
                "--validating-webhook-key=/usr/local/certificates/key",
              ],
              "env": Array [
                Object {
                  "name": "POD_NAME",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "metadata.name",
                    },
                  },
                },
                Object {
                  "name": "POD_NAMESPACE",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "metadata.namespace",
                    },
                  },
                },
                Object {
                  "name": "LD_PRELOAD",
                  "value": "/usr/local/lib/libmimalloc.so",
                },
              ],
              "image": "registry.k8s.io/ingress-nginx/controller:v1.5.1@sha256:4ba73c697770664c1e00e9f968de14e08f606ff961c76e5d7033a4a9c593c629",
              "imagePullPolicy": "IfNotPresent",
              "lifecycle": Object {
                "preStop": Object {
                  "exec": Object {
                    "command": Array [
                      "/wait-shutdown",
                    ],
                  },
                },
              },
              "livenessProbe": Object {
                "failureThreshold": 5,
                "httpGet": Object {
                  "path": "/healthz",
                  "port": 10254,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
              },
              "name": "controller",
              "ports": Array [
                Object {
                  "containerPort": 80,
                  "name": "http",
                  "protocol": "TCP",
                },
                Object {
                  "containerPort": 443,
                  "name": "https",
                  "protocol": "TCP",
                },
                Object {
                  "containerPort": 8443,
                  "name": "webhook",
                  "protocol": "TCP",
                },
              ],
              "readinessProbe": Object {
                "failureThreshold": 3,
                "httpGet": Object {
                  "path": "/healthz",
                  "port": 10254,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
              },
              "resources": Object {
                "requests": Object {
                  "cpu": "100m",
                  "memory": "90Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": true,
                "capabilities": Object {
                  "add": Array [
                    "NET_BIND_SERVICE",
                  ],
                  "drop": Array [
                    "ALL",
                  ],
                },
                "runAsUser": 101,
              },
              "volumeMounts": Array [
                Object {
                  "mountPath": "/usr/local/certificates/",
                  "name": "webhook-cert",
                  "readOnly": true,
                },
              ],
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "nodeSelector": Object {
            "kubernetes.io/os": "linux",
            "nodetype": "application",
          },
          "serviceAccountName": "ingress-nginx",
          "terminationGracePeriodSeconds": 300,
          "topologySpreadConstraints": Array [
            Object {
              "labelSelector": Object {
                "matchLabels": Object {
                  "app": "nginx-controller",
                },
              },
              "maxSkew": 1,
              "topologyKey": "nodetype",
              "whenUnsatisfiable": "DoNotSchedule",
            },
          ],
          "volumes": Array [
            Object {
              "name": "webhook-cert",
              "secret": Object {
                "secretName": "ingress-nginx-admission",
              },
            },
          ],
        },
      },
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "IngressClass",
    "metadata": Object {
      "labels": Object {
        "app": "nginx-controller",
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "nginx",
    },
    "spec": Object {
      "controller": "k8s.io/ingress-nginx",
    },
  },
  Object {
    "apiVersion": "admissionregistration.k8s.io/v1",
    "kind": "ValidatingWebhookConfiguration",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/component": "admission-webhook",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-admission",
    },
    "webhooks": Array [
      Object {
        "admissionReviewVersions": Array [
          "v1",
        ],
        "clientConfig": Object {
          "service": Object {
            "name": "ingress-nginx-controller-admission",
            "namespace": "default",
            "path": "/networking/v1/ingresses",
          },
        },
        "failurePolicy": "Fail",
        "matchPolicy": "Equivalent",
        "name": "validate.nginx.ingress.kubernetes.io",
        "rules": Array [
          Object {
            "apiGroups": Array [
              "networking.k8s.io",
            ],
            "apiVersions": Array [
              "v1",
            ],
            "operations": Array [
              "CREATE",
              "UPDATE",
            ],
            "resources": Array [
              "ingresses",
            ],
          },
        ],
        "sideEffects": "None",
      },
    ],
  },
  Object {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": Object {
      "annotations": Object {
        "helm.sh/hook": "pre-install,pre-upgrade,post-install,post-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded",
      },
      "labels": Object {
        "app.kubernetes.io/component": "admission-webhook",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-admission",
      "namespace": "default",
    },
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "annotations": Object {
        "helm.sh/hook": "pre-install,pre-upgrade,post-install,post-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded",
      },
      "labels": Object {
        "app.kubernetes.io/component": "admission-webhook",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-admission",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "admissionregistration.k8s.io",
        ],
        "resources": Array [
          "validatingwebhookconfigurations",
        ],
        "verbs": Array [
          "get",
          "update",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "annotations": Object {
        "helm.sh/hook": "pre-install,pre-upgrade,post-install,post-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded",
      },
      "labels": Object {
        "app.kubernetes.io/component": "admission-webhook",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-admission",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "ingress-nginx-admission",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "ingress-nginx-admission",
        "namespace": "default",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": Object {
      "annotations": Object {
        "helm.sh/hook": "pre-install,pre-upgrade,post-install,post-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded",
      },
      "labels": Object {
        "app.kubernetes.io/component": "admission-webhook",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-admission",
      "namespace": "default",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "secrets",
        ],
        "verbs": Array [
          "get",
          "create",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": Object {
      "annotations": Object {
        "helm.sh/hook": "pre-install,pre-upgrade,post-install,post-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded",
      },
      "labels": Object {
        "app.kubernetes.io/component": "admission-webhook",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-admission",
      "namespace": "default",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "ingress-nginx-admission",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "ingress-nginx-admission",
        "namespace": "default",
      },
    ],
  },
  Object {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": Object {
      "annotations": Object {
        "helm.sh/hook": "pre-install,pre-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded",
      },
      "labels": Object {
        "app.kubernetes.io/component": "admission-webhook",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-admission-create",
      "namespace": "default",
    },
    "spec": Object {
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app.kubernetes.io/component": "admission-webhook",
            "app.kubernetes.io/instance": "ingress-nginx",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "ingress-nginx",
            "app.kubernetes.io/part-of": "ingress-nginx",
            "app.kubernetes.io/version": "1.5.1",
            "helm.sh/chart": "ingress-nginx-4.4.2",
          },
          "name": "ingress-nginx-admission-create",
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "create",
                "--host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc",
                "--namespace=$(POD_NAMESPACE)",
                "--secret-name=ingress-nginx-admission",
              ],
              "env": Array [
                Object {
                  "name": "POD_NAMESPACE",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "metadata.namespace",
                    },
                  },
                },
              ],
              "image": "registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20220916-gd32f8c343@sha256:39c5b2e3310dc4264d638ad28d9d1d96c4cbb2b2dcfb52368fe4e3c63f61e10f",
              "imagePullPolicy": "IfNotPresent",
              "name": "create",
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
              },
            },
          ],
          "nodeSelector": Object {
            "kubernetes.io/os": "linux",
          },
          "restartPolicy": "OnFailure",
          "securityContext": Object {
            "fsGroup": 2000,
            "runAsNonRoot": true,
            "runAsUser": 2000,
          },
          "serviceAccountName": "ingress-nginx-admission",
        },
      },
    },
  },
  Object {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": Object {
      "annotations": Object {
        "helm.sh/hook": "post-install,post-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded",
      },
      "labels": Object {
        "app.kubernetes.io/component": "admission-webhook",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-admission-patch",
      "namespace": "default",
    },
    "spec": Object {
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app.kubernetes.io/component": "admission-webhook",
            "app.kubernetes.io/instance": "ingress-nginx",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "ingress-nginx",
            "app.kubernetes.io/part-of": "ingress-nginx",
            "app.kubernetes.io/version": "1.5.1",
            "helm.sh/chart": "ingress-nginx-4.4.2",
          },
          "name": "ingress-nginx-admission-patch",
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "patch",
                "--webhook-name=ingress-nginx-admission",
                "--namespace=$(POD_NAMESPACE)",
                "--patch-mutating=false",
                "--secret-name=ingress-nginx-admission",
                "--patch-failure-policy=Fail",
              ],
              "env": Array [
                Object {
                  "name": "POD_NAMESPACE",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "metadata.namespace",
                    },
                  },
                },
              ],
              "image": "registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20220916-gd32f8c343@sha256:39c5b2e3310dc4264d638ad28d9d1d96c4cbb2b2dcfb52368fe4e3c63f61e10f",
              "imagePullPolicy": "IfNotPresent",
              "name": "patch",
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
              },
            },
          ],
          "nodeSelector": Object {
            "kubernetes.io/os": "linux",
          },
          "restartPolicy": "OnFailure",
          "securityContext": Object {
            "fsGroup": 2000,
            "runAsNonRoot": true,
            "runAsUser": 2000,
          },
          "serviceAccountName": "ingress-nginx-admission",
        },
      },
    },
  },
]
`;

exports[`ingress-nginx-chart with tls 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "automountServiceAccountToken": true,
    "kind": "ServiceAccount",
    "metadata": Object {
      "labels": Object {
        "app": "nginx-controller",
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx",
      "namespace": "default",
    },
  },
  Object {
    "apiVersion": "v1",
    "data": Object {
      "allow-snippet-annotations": "true",
      "log-format-escape-json": "true",
      "log-format-upstream": "{ \\"timestamp\\": \\"$time_iso8601\\", \\"nginx\\": {\\"x_forwarded_proto\\": \\"$http_x_forwarded_proto\\", \\"x_forwarded_for\\": \\"$proxy_add_x_forwarded_for\\", \\"remote_addr\\": \\"$remote_addr\\", \\"remote_user\\": \\"$remote_user\\", \\"status\\": \\"$status\\", \\"body_bytes_sent\\": $body_bytes_sent, \\"request\\": \\"$request\\", \\"request_length\\": $request_length, \\"request_method\\": \\"$request_method\\", \\"request_time\\": $request_time, \\"http_referrer\\": \\"$http_referer\\", \\"http_user_agent\\": \\"$http_user_agent\\", \\"upstream_connect_time\\": $upstream_connect_time, \\"upstream_response_time\\": $upstream_response_time, \\"upstream_bytes_sent\\": $upstream_bytes_sent, \\"upstream_bytes_received\\": $upstream_bytes_received, \\"upstream_status\\": \\"$upstream_status\\", \\"upstream_server\\": \\"$upstream_addr\\", \\"host\\": \\"$host\\", \\"cf_ray\\": \\"$http_cf_ray\\", \\"request_id\\": \\"$request_id\\" } }",
      "use-forwarded-headers": "true",
    },
    "kind": "ConfigMap",
    "metadata": Object {
      "labels": Object {
        "app": "nginx-controller",
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-controller",
      "namespace": "default",
    },
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app": "nginx-controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "configmaps",
          "endpoints",
          "nodes",
          "pods",
          "secrets",
          "namespaces",
        ],
        "verbs": Array [
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "coordination.k8s.io",
        ],
        "resources": Array [
          "leases",
        ],
        "verbs": Array [
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "nodes",
        ],
        "verbs": Array [
          "get",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "services",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingresses",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "events",
        ],
        "verbs": Array [
          "create",
          "patch",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingresses/status",
        ],
        "verbs": Array [
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingressclasses",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "discovery.k8s.io",
        ],
        "resources": Array [
          "endpointslices",
        ],
        "verbs": Array [
          "list",
          "watch",
          "get",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app": "nginx-controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "ingress-nginx",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "ingress-nginx",
        "namespace": "default",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": Object {
      "labels": Object {
        "app": "nginx-controller",
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx",
      "namespace": "default",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "namespaces",
        ],
        "verbs": Array [
          "get",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "configmaps",
          "pods",
          "secrets",
          "endpoints",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "services",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingresses",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingresses/status",
        ],
        "verbs": Array [
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingressclasses",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "coordination.k8s.io",
        ],
        "resourceNames": Array [
          "ingress-nginx-leader",
        ],
        "resources": Array [
          "leases",
        ],
        "verbs": Array [
          "get",
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "coordination.k8s.io",
        ],
        "resources": Array [
          "leases",
        ],
        "verbs": Array [
          "create",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "events",
        ],
        "verbs": Array [
          "create",
          "patch",
        ],
      },
      Object {
        "apiGroups": Array [
          "discovery.k8s.io",
        ],
        "resources": Array [
          "endpointslices",
        ],
        "verbs": Array [
          "list",
          "watch",
          "get",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": Object {
      "labels": Object {
        "app": "nginx-controller",
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx",
      "namespace": "default",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "ingress-nginx",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "ingress-nginx",
        "namespace": "default",
      },
    ],
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "labels": Object {
        "app": "nginx-controller",
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-controller-admission",
      "namespace": "default",
    },
    "spec": Object {
      "ports": Array [
        Object {
          "appProtocol": "https",
          "name": "https-webhook",
          "port": 443,
          "targetPort": "webhook",
        },
      ],
      "selector": Object {
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "type": "ClusterIP",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-controller",
      "namespace": "default",
    },
    "spec": Object {
      "ports": Array [
        Object {
          "appProtocol": "http",
          "name": "http",
          "port": 80,
          "protocol": "TCP",
          "targetPort": "http",
        },
        Object {
          "appProtocol": "https",
          "name": "https",
          "port": 443,
          "protocol": "TCP",
          "targetPort": "https",
        },
      ],
      "selector": Object {
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "type": "ClusterIP",
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "labels": Object {
        "app": "nginx-controller",
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-controller",
      "namespace": "default",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "replicas": 1,
      "revisionHistoryLimit": 10,
      "selector": Object {
        "matchLabels": Object {
          "app.kubernetes.io/component": "controller",
          "app.kubernetes.io/instance": "ingress-nginx",
          "app.kubernetes.io/name": "ingress-nginx",
        },
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app": "nginx-controller",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "ingress-nginx",
            "app.kubernetes.io/name": "ingress-nginx",
          },
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "/nginx-ingress-controller",
                "--publish-service=$(POD_NAMESPACE)/ingress-nginx-controller",
                "--election-id=ingress-nginx-leader",
                "--controller-class=k8s.io/ingress-nginx",
                "--ingress-class=nginx",
                "--configmap=$(POD_NAMESPACE)/ingress-nginx-controller",
                "--validating-webhook=:8443",
                "--validating-webhook-certificate=/usr/local/certificates/cert",
                "--validating-webhook-key=/usr/local/certificates/key",
                "--default-ssl-certificate=default/loc00-tls-secret",
              ],
              "env": Array [
                Object {
                  "name": "POD_NAME",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "metadata.name",
                    },
                  },
                },
                Object {
                  "name": "POD_NAMESPACE",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "metadata.namespace",
                    },
                  },
                },
                Object {
                  "name": "LD_PRELOAD",
                  "value": "/usr/local/lib/libmimalloc.so",
                },
              ],
              "image": "registry.k8s.io/ingress-nginx/controller:v1.5.1@sha256:4ba73c697770664c1e00e9f968de14e08f606ff961c76e5d7033a4a9c593c629",
              "imagePullPolicy": "IfNotPresent",
              "lifecycle": Object {
                "preStop": Object {
                  "exec": Object {
                    "command": Array [
                      "/wait-shutdown",
                    ],
                  },
                },
              },
              "livenessProbe": Object {
                "failureThreshold": 5,
                "httpGet": Object {
                  "path": "/healthz",
                  "port": 10254,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
              },
              "name": "controller",
              "ports": Array [
                Object {
                  "containerPort": 80,
                  "name": "http",
                  "protocol": "TCP",
                },
                Object {
                  "containerPort": 443,
                  "name": "https",
                  "protocol": "TCP",
                },
                Object {
                  "containerPort": 8443,
                  "name": "webhook",
                  "protocol": "TCP",
                },
              ],
              "readinessProbe": Object {
                "failureThreshold": 3,
                "httpGet": Object {
                  "path": "/healthz",
                  "port": 10254,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
              },
              "resources": Object {
                "requests": Object {
                  "cpu": "100m",
                  "memory": "90Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": true,
                "capabilities": Object {
                  "add": Array [
                    "NET_BIND_SERVICE",
                  ],
                  "drop": Array [
                    "ALL",
                  ],
                },
                "runAsUser": 101,
              },
              "volumeMounts": Array [
                Object {
                  "mountPath": "/usr/local/certificates/",
                  "name": "webhook-cert",
                  "readOnly": true,
                },
              ],
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "nodeSelector": Object {
            "kubernetes.io/os": "linux",
          },
          "serviceAccountName": "ingress-nginx",
          "terminationGracePeriodSeconds": 300,
          "volumes": Array [
            Object {
              "name": "webhook-cert",
              "secret": Object {
                "secretName": "ingress-nginx-admission",
              },
            },
          ],
        },
      },
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "IngressClass",
    "metadata": Object {
      "labels": Object {
        "app": "nginx-controller",
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "nginx",
    },
    "spec": Object {
      "controller": "k8s.io/ingress-nginx",
    },
  },
  Object {
    "apiVersion": "admissionregistration.k8s.io/v1",
    "kind": "ValidatingWebhookConfiguration",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/component": "admission-webhook",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-admission",
    },
    "webhooks": Array [
      Object {
        "admissionReviewVersions": Array [
          "v1",
        ],
        "clientConfig": Object {
          "service": Object {
            "name": "ingress-nginx-controller-admission",
            "namespace": "default",
            "path": "/networking/v1/ingresses",
          },
        },
        "failurePolicy": "Fail",
        "matchPolicy": "Equivalent",
        "name": "validate.nginx.ingress.kubernetes.io",
        "rules": Array [
          Object {
            "apiGroups": Array [
              "networking.k8s.io",
            ],
            "apiVersions": Array [
              "v1",
            ],
            "operations": Array [
              "CREATE",
              "UPDATE",
            ],
            "resources": Array [
              "ingresses",
            ],
          },
        ],
        "sideEffects": "None",
      },
    ],
  },
  Object {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": Object {
      "annotations": Object {
        "helm.sh/hook": "pre-install,pre-upgrade,post-install,post-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded",
      },
      "labels": Object {
        "app.kubernetes.io/component": "admission-webhook",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-admission",
      "namespace": "default",
    },
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "annotations": Object {
        "helm.sh/hook": "pre-install,pre-upgrade,post-install,post-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded",
      },
      "labels": Object {
        "app.kubernetes.io/component": "admission-webhook",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-admission",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "admissionregistration.k8s.io",
        ],
        "resources": Array [
          "validatingwebhookconfigurations",
        ],
        "verbs": Array [
          "get",
          "update",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "annotations": Object {
        "helm.sh/hook": "pre-install,pre-upgrade,post-install,post-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded",
      },
      "labels": Object {
        "app.kubernetes.io/component": "admission-webhook",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-admission",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "ingress-nginx-admission",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "ingress-nginx-admission",
        "namespace": "default",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": Object {
      "annotations": Object {
        "helm.sh/hook": "pre-install,pre-upgrade,post-install,post-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded",
      },
      "labels": Object {
        "app.kubernetes.io/component": "admission-webhook",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-admission",
      "namespace": "default",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "secrets",
        ],
        "verbs": Array [
          "get",
          "create",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": Object {
      "annotations": Object {
        "helm.sh/hook": "pre-install,pre-upgrade,post-install,post-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded",
      },
      "labels": Object {
        "app.kubernetes.io/component": "admission-webhook",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-admission",
      "namespace": "default",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "ingress-nginx-admission",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "ingress-nginx-admission",
        "namespace": "default",
      },
    ],
  },
  Object {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": Object {
      "annotations": Object {
        "helm.sh/hook": "pre-install,pre-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded",
      },
      "labels": Object {
        "app.kubernetes.io/component": "admission-webhook",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-admission-create",
      "namespace": "default",
    },
    "spec": Object {
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app.kubernetes.io/component": "admission-webhook",
            "app.kubernetes.io/instance": "ingress-nginx",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "ingress-nginx",
            "app.kubernetes.io/part-of": "ingress-nginx",
            "app.kubernetes.io/version": "1.5.1",
            "helm.sh/chart": "ingress-nginx-4.4.2",
          },
          "name": "ingress-nginx-admission-create",
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "create",
                "--host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc",
                "--namespace=$(POD_NAMESPACE)",
                "--secret-name=ingress-nginx-admission",
              ],
              "env": Array [
                Object {
                  "name": "POD_NAMESPACE",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "metadata.namespace",
                    },
                  },
                },
              ],
              "image": "registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20220916-gd32f8c343@sha256:39c5b2e3310dc4264d638ad28d9d1d96c4cbb2b2dcfb52368fe4e3c63f61e10f",
              "imagePullPolicy": "IfNotPresent",
              "name": "create",
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
              },
            },
          ],
          "nodeSelector": Object {
            "kubernetes.io/os": "linux",
          },
          "restartPolicy": "OnFailure",
          "securityContext": Object {
            "fsGroup": 2000,
            "runAsNonRoot": true,
            "runAsUser": 2000,
          },
          "serviceAccountName": "ingress-nginx-admission",
        },
      },
    },
  },
  Object {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": Object {
      "annotations": Object {
        "helm.sh/hook": "post-install,post-upgrade",
        "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded",
      },
      "labels": Object {
        "app.kubernetes.io/component": "admission-webhook",
        "app.kubernetes.io/instance": "ingress-nginx",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "ingress-nginx",
        "app.kubernetes.io/part-of": "ingress-nginx",
        "app.kubernetes.io/version": "1.5.1",
        "helm.sh/chart": "ingress-nginx-4.4.2",
      },
      "name": "ingress-nginx-admission-patch",
      "namespace": "default",
    },
    "spec": Object {
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app.kubernetes.io/component": "admission-webhook",
            "app.kubernetes.io/instance": "ingress-nginx",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "ingress-nginx",
            "app.kubernetes.io/part-of": "ingress-nginx",
            "app.kubernetes.io/version": "1.5.1",
            "helm.sh/chart": "ingress-nginx-4.4.2",
          },
          "name": "ingress-nginx-admission-patch",
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "patch",
                "--webhook-name=ingress-nginx-admission",
                "--namespace=$(POD_NAMESPACE)",
                "--patch-mutating=false",
                "--secret-name=ingress-nginx-admission",
                "--patch-failure-policy=Fail",
              ],
              "env": Array [
                Object {
                  "name": "POD_NAMESPACE",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "metadata.namespace",
                    },
                  },
                },
              ],
              "image": "registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20220916-gd32f8c343@sha256:39c5b2e3310dc4264d638ad28d9d1d96c4cbb2b2dcfb52368fe4e3c63f61e10f",
              "imagePullPolicy": "IfNotPresent",
              "name": "patch",
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
              },
            },
          ],
          "nodeSelector": Object {
            "kubernetes.io/os": "linux",
          },
          "restartPolicy": "OnFailure",
          "securityContext": Object {
            "fsGroup": 2000,
            "runAsNonRoot": true,
            "runAsUser": 2000,
          },
          "serviceAccountName": "ingress-nginx-admission",
        },
      },
    },
  },
]
`;
