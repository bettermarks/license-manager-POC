"""initial

Revision ID: abc6751827cf
Revises: 
Create Date: 2023-03-01 08:20:58.375221

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "abc6751827cf"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "hierarchy_provider",
        sa.Column("url", sa.String(length=1024), nullable=False),
        sa.Column("short_name", sa.String(length=64), nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("description", sa.String(length=512), nullable=True),
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column(
            "created",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("updated", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_hierarchy_provider")),
    )
    op.create_index(
        op.f("ix_hierarchy_provider_created"),
        "hierarchy_provider",
        ["created"],
        unique=False,
    )
    op.create_index(
        op.f("ix_hierarchy_provider_id"), "hierarchy_provider", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_hierarchy_provider_name"), "hierarchy_provider", ["name"], unique=False
    )
    op.create_index(
        op.f("ix_hierarchy_provider_short_name"),
        "hierarchy_provider",
        ["short_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_hierarchy_provider_url"), "hierarchy_provider", ["url"], unique=True
    )
    op.create_table(
        "product",
        sa.Column("eid", sa.String(length=256), nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("description", sa.String(length=512), nullable=True),
        sa.Column(
            "permissions", postgresql.JSONB(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column(
            "created",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("updated", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_product")),
    )
    op.create_index(op.f("ix_product_created"), "product", ["created"], unique=False)
    op.create_index(op.f("ix_product_eid"), "product", ["eid"], unique=True)
    op.create_index(op.f("ix_product_id"), "product", ["id"], unique=False)
    op.create_index(op.f("ix_product_name"), "product", ["name"], unique=False)
    op.create_table(
        "license",
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("ref_product", sa.BIGINT(), nullable=False),
        sa.Column("ref_hierarchy_provider", sa.BIGINT(), nullable=False),
        sa.Column("purchaser_eid", sa.String(length=256), nullable=False),
        sa.Column("owner_type", sa.String(length=256), nullable=False),
        sa.Column("owner_level", sa.Integer(), nullable=False),
        sa.Column("owner_eid", sa.String(length=256), nullable=False),
        sa.Column("valid_from", sa.Date(), nullable=False),
        sa.Column("valid_to", sa.Date(), nullable=False),
        sa.Column("seats", sa.Integer(), nullable=True),
        sa.Column("is_seats_shared", sa.Boolean(), nullable=False),
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column(
            "created",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("updated", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["ref_hierarchy_provider"],
            ["hierarchy_provider.id"],
            name=op.f("fk_license_ref_hierarchy_provider_hierarchy_provider"),
        ),
        sa.ForeignKeyConstraint(
            ["ref_product"], ["product.id"], name=op.f("fk_license_ref_product_product")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_license")),
        sa.UniqueConstraint(
            "ref_product",
            "ref_hierarchy_provider",
            "purchaser_eid",
            "owner_type",
            "owner_eid",
            "valid_from",
            "valid_to",
            name=op.f("uq_license_ref_product"),
        ),
    )
    op.create_index(op.f("ix_license_created"), "license", ["created"], unique=False)
    op.create_index(op.f("ix_license_id"), "license", ["id"], unique=False)
    op.create_index(
        op.f("ix_license_owner_eid"), "license", ["owner_eid"], unique=False
    )
    op.create_index(
        op.f("ix_license_owner_level"), "license", ["owner_level"], unique=False
    )
    op.create_index(
        op.f("ix_license_owner_type"), "license", ["owner_type"], unique=False
    )
    op.create_index(
        op.f("ix_license_purchaser_eid"), "license", ["purchaser_eid"], unique=False
    )
    op.create_index(
        op.f("ix_license_ref_hierarchy_provider"),
        "license",
        ["ref_hierarchy_provider"],
        unique=False,
    )
    op.create_index(
        op.f("ix_license_ref_product"), "license", ["ref_product"], unique=False
    )
    op.create_index(op.f("ix_license_uuid"), "license", ["uuid"], unique=False)
    op.create_index(
        op.f("ix_license_valid_from"), "license", ["valid_from"], unique=False
    )
    op.create_index(op.f("ix_license_valid_to"), "license", ["valid_to"], unique=False)
    op.create_table(
        "seat",
        sa.Column("ref_license", sa.BIGINT(), nullable=False),
        sa.Column("user_eid", sa.String(length=256), nullable=False),
        sa.Column("occupied_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("released_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("last_login", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("is_occupied", sa.Boolean(), nullable=False),
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column(
            "created",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("updated", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["ref_license"], ["license.id"], name=op.f("fk_seat_ref_license_license")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_seat")),
    )
    op.create_index(op.f("ix_seat_created"), "seat", ["created"], unique=False)
    op.create_index(op.f("ix_seat_id"), "seat", ["id"], unique=False)
    op.create_index(op.f("ix_seat_is_occupied"), "seat", ["is_occupied"], unique=False)
    op.create_index(op.f("ix_seat_last_login"), "seat", ["last_login"], unique=False)
    op.create_index(op.f("ix_seat_occupied_at"), "seat", ["occupied_at"], unique=False)
    op.create_index(op.f("ix_seat_ref_license"), "seat", ["ref_license"], unique=False)
    op.create_index(op.f("ix_seat_released_at"), "seat", ["released_at"], unique=False)
    op.create_index(op.f("ix_seat_user_eid"), "seat", ["user_eid"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_seat_user_eid"), table_name="seat")
    op.drop_index(op.f("ix_seat_released_at"), table_name="seat")
    op.drop_index(op.f("ix_seat_ref_license"), table_name="seat")
    op.drop_index(op.f("ix_seat_occupied_at"), table_name="seat")
    op.drop_index(op.f("ix_seat_last_login"), table_name="seat")
    op.drop_index(op.f("ix_seat_is_occupied"), table_name="seat")
    op.drop_index(op.f("ix_seat_id"), table_name="seat")
    op.drop_index(op.f("ix_seat_created"), table_name="seat")
    op.drop_table("seat")
    op.drop_index(op.f("ix_license_valid_to"), table_name="license")
    op.drop_index(op.f("ix_license_valid_from"), table_name="license")
    op.drop_index(op.f("ix_license_uuid"), table_name="license")
    op.drop_index(op.f("ix_license_ref_product"), table_name="license")
    op.drop_index(op.f("ix_license_ref_hierarchy_provider"), table_name="license")
    op.drop_index(op.f("ix_license_purchaser_eid"), table_name="license")
    op.drop_index(op.f("ix_license_owner_type"), table_name="license")
    op.drop_index(op.f("ix_license_owner_level"), table_name="license")
    op.drop_index(op.f("ix_license_owner_eid"), table_name="license")
    op.drop_index(op.f("ix_license_id"), table_name="license")
    op.drop_index(op.f("ix_license_created"), table_name="license")
    op.drop_table("license")
    op.drop_index(op.f("ix_product_name"), table_name="product")
    op.drop_index(op.f("ix_product_id"), table_name="product")
    op.drop_index(op.f("ix_product_eid"), table_name="product")
    op.drop_index(op.f("ix_product_created"), table_name="product")
    op.drop_table("product")
    op.drop_index(op.f("ix_hierarchy_provider_url"), table_name="hierarchy_provider")
    op.drop_index(
        op.f("ix_hierarchy_provider_short_name"), table_name="hierarchy_provider"
    )
    op.drop_index(op.f("ix_hierarchy_provider_name"), table_name="hierarchy_provider")
    op.drop_index(op.f("ix_hierarchy_provider_id"), table_name="hierarchy_provider")
    op.drop_index(
        op.f("ix_hierarchy_provider_created"), table_name="hierarchy_provider"
    )
    op.drop_table("hierarchy_provider")
    # ### end Alembic commands ###
